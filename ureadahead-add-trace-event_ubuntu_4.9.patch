diff -ruwN v4.9.ori/fs/exec.c v4.9/fs/exec.c
--- v4.9.ori/fs/exec.c	2016-12-19 20:54:02.643772669 +0100
+++ v4.9/fs/exec.c	2016-12-19 16:50:54.343782868 +0100
@@ -58,6 +58,8 @@
 #include <linux/compat.h>
 #include <linux/vmalloc.h>
 
+#include <trace/events/fs.h>
+
 #include <asm/uaccess.h>
 #include <asm/mmu_context.h>
 #include <asm/tlb.h>
@@ -835,8 +837,10 @@
 	if (err)
 		goto exit;
 
-	if (name->name[0] != '\0')
+	if (name->name[0] != '\0') {
 		fsnotify_open(file);
+        trace_open_exec(name->name);
+    }
 
 out:
 	return file;
diff -ruwN v4.9.ori/fs/open.c v4.9/fs/open.c
--- v4.9.ori/fs/open.c	2016-12-19 20:54:18.619588508 +0100
+++ v4.9/fs/open.c	2016-12-19 16:52:21.137372067 +0100
@@ -34,6 +34,9 @@
 
 #include "internal.h"
 
+#define CREATE_TRACE_POINTS
+#include <trace/events/fs.h>
+
 int do_truncate(struct dentry *dentry, loff_t length, unsigned int time_attrs,
 	struct file *filp)
 {
@@ -1057,6 +1060,7 @@
 		} else {
 			fsnotify_open(f);
 			fd_install(fd, f);
+            trace_do_sys_open(tmp->name, flags, mode);
 		}
 	}
 	putname(tmp);
diff -ruwN v4.9.ori/include/trace/events/fs.h v4.9/include/trace/events/fs.h
--- v4.9.ori/include/trace/events/fs.h	1970-01-01 01:00:00.000000000 +0100
+++ v4.9/include/trace/events/fs.h	2016-12-19 16:53:20.855942758 +0100
@@ -0,0 +1,53 @@
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM fs
+
+#if !defined(_TRACE_FS_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_FS_H
+
+#include <linux/fs.h>
+#include <linux/tracepoint.h>
+
+TRACE_EVENT(do_sys_open,
+
+   TP_PROTO(const char *filename, int flags, int mode),
+
+   TP_ARGS(filename, flags, mode),
+
+   TP_STRUCT__entry(
+       __string(   filename, filename      )
+       __field(    int, flags          )
+       __field(    int, mode           )
+   ),
+
+   TP_fast_assign(
+       __assign_str(filename, filename);
+       __entry->flags = flags;
+       __entry->mode = mode;
+   ),
+
+   TP_printk("\"%s\" %x %o",
+         __get_str(filename), __entry->flags, __entry->mode)
+);
+
+TRACE_EVENT(open_exec,
+
+   TP_PROTO(const char *filename),
+
+   TP_ARGS(filename),
+
+   TP_STRUCT__entry(
+       __string(   filename, filename      )
+   ),
+
+   TP_fast_assign(
+       __assign_str(filename, filename);
+   ),
+
+   TP_printk("\"%s\"",
+         __get_str(filename))
+);
+
+#endif /* _TRACE_FS_H */
+
+/* This part must be outside protection */
+#include <trace/define_trace.h>
